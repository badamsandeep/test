 func replaceVariables(jsonData string, config map[string]string) string {
	// Regular expression to find placeholders (e.g., "{{variable}}")
	re := regexp.MustCompile(`{{(.*?)}}`)

	// Replace each placeholder with the corresponding value from config
	replacedData := re.ReplaceAllStringFunc(jsonData, func(match string) string {
		key := strings.Trim(match, "{}") // Extract key name from {{key}}
		if val, exists := config[key]; exists {
			return val
		}
		return match // Keep the original if not found in config
	})

	return replacedData
}


func replaceVariables(data map[string]map[string]string, config map[string]string) {
	re := regexp.MustCompile(`{{(.*?)}}`) // Matches {{variable}}

	for _, innerMap := range data {
		for key, value := range innerMap {
			innerMap[key] = re.ReplaceAllStringFunc(value, func(match string) string {
				key := strings.Trim(match, "{}")
				if val, exists := config[key]; exists {
					return val
				}
				return match
			})
		}
	}
}
