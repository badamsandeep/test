import os
import yaml
import requests
from kubernetes import client, config
from kubernetes.dynamic import DynamicClient


def load_kube_config(kubeconfig_path):
    """Load Kubernetes configuration."""
    if not os.path.exists(kubeconfig_path):
        raise FileNotFoundError(f"Kubeconfig not found: {kubeconfig_path}")
    config.load_kube_config(config_file=kubeconfig_path)
    return DynamicClient(client.ApiClient())


def fetch_k8s_resource(dyn_client, resource_type, resource_name, namespace):
    """Fetch a Kubernetes resource."""
    try:
        resource = dyn_client.resources.get(kind=resource_type)
        obj = resource.get(name=resource_name, namespace=namespace)
        return obj.to_dict()
    except Exception as e:
        raise RuntimeError(f"Failed to fetch resource {resource_type}/{resource_name} in {namespace}: {e}")


def audit_with_chatgpt(api_url, resource_data, language):
    """Send the Kubernetes resource to the ChatGPT API for auditing."""
    prompt = f"""
You are a Kubernetes administrator. Inspect the following Kubernetes resource and identify security misconfigurations. 
Provide advice in bullet points using the imperative tense. If there are no issues, reply with 'Everything is OK.'
Answer in {language}.

THE RESOURCE:
'''
{yaml.dump(resource_data)}
'''

Remember to write only the most important points, no more than a few bullet points.
"""
    payload = {"prompt": prompt}
    try:
        response = requests.post(api_url, json=payload)
        response.raise_for_status()
        return response.text
    except requests.exceptions.RequestException as e:
        raise RuntimeError(f"Error communicating with ChatGPT API: {e}")


def main():
    kubeconfig = input("Enter path to kubeconfig: ").strip()
    resource_type = input("Enter Kubernetes resource type (e.g., Pod, Deployment): ").strip()
    resource_name = input("Enter resource name: ").strip()
    namespace = input("Enter namespace: ").strip()
    chatgpt_api_url = input("Enter ChatGPT API URL: ").strip()
    language = input("Enter response language (e.g., English, Spanish): ").strip()

    # Load Kubernetes configuration
    dyn_client = load_kube_config(kubeconfig)

    # Fetch Kubernetes resource
    resource_data = fetch_k8s_resource(dyn_client, resource_type, resource_name, namespace)

    # Audit with ChatGPT
    audit_result = audit_with_chatgpt(chatgpt_api_url, resource_data, language)

    # Print the result
    print("\nAudit Result:")
    print(audit_result)


if __name__ == "__main__":
    main()
